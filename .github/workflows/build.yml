name: Build Lua definitions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  lua_version: 5.1
  luarocks_version: 3.9.1
  luarocks_dependencies: |- # except for Lua which is defined in lua_version above
    luafilesystem ~> 1
  vendor_path: .luarocks
  output_dir: output
  GIT_AUTHOR_NAME: github-actions[bot]
  GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_COMMITTER_NAME: github-actions[bot]
  GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
  DEBUG_ENABLED: ${{ secrets.ACTIONS_STEP_DEBUG }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output_any_modified: ${{ steps.changed_files_output.outputs.any_modified }}
      rockspec_path: ${{ steps.rockspec.outputs.file_path }}
      rockspec_is_changed: ${{ steps.changed_files_rockspec.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
      - uses: leafo/gh-actions-lua@v9.1.0
        with:
          luaVersion: ${{ env.lua_version }}
      - uses: leafo/gh-actions-luarocks@v4.3.0
        with:
          luarocksVersion: ${{ env.luarocks_version }}

      - name: Check if a rockspec file is present
        id: rockspec
        run: |
          if [ -s "$(echo *.rockspec)" ]; then
            echo "::set-output name=file_path::$(echo *.rockspec)"
            echo "::set-output name=is_present::true"
          else
            echo "::set-output name=is_present::false"
          fi

      - uses: actions/cache@v3
        id: cache
        if: steps.rockspec.outputs.is_present == 'true'
        with:
          path: |
            .luarocks
            lua_modules
          key: "${{ runner.os }}-luarocks_vendor_${{ hashFiles('*.rockspec') }}"
          restore-keys: "${{ runner.os }}-luarocks_vendor_"

      - name: Install
        run: |
          [ "${DEBUG_ENABLED}" = 'true' ] && set -x

          if [ "${{ steps.rockspec.outputs.is_present }}" == "true" ]; then
            luarocks install --tree ${{ env.vendor_path }} --only-deps ${{ steps.rockspec.outputs.file_path }}
          fi

          lr_path=$(luarocks path --tree ${{ env.vendor_path }} --lr-path )
          echo "LUA_PATH=${lr_path};${LUA_PATH}" >> $GITHUB_ENV

          lr_cpath=$(luarocks path --tree ${{ env.vendor_path }} --lr-cpath)
          echo "LUA_CPATH=${lr_cpath};${LUA_CPATH}" >> $GITHUB_ENV

          lr_bin=$(luarocks path --tree ${{ env.vendor_path }} --lr-bin)
          echo "${lr_bin/;/:}" >> $GITHUB_PATH

      - name: Regenerate EmmyLua definitions
        shell: bash
        run: |
          rm -rf ${{ env.output_dir }}
          ./bin/tw_autogen

      - name: Recreate rockspec file
        id: rockspec-new
        shell: bash
        run: |
          rm -rf *.rockspec
          luarocks --tree ${{ env.vendor_path }} \
            write_rockspec \
            --lua-versions="${{ env.lua_version }}" \
            --homepage="${{ format('{0}/{1}', github.server_url, github.repository) }}"

          rockspec=$(echo *.rockspec)

          dependencies="$(
            printf '%s\n' '   "lua ~> ${{ env.lua_version }}",'
            while IFS= read -r dep; do
              [ ! -z "$dep" ] && printf '%s\n' "   \"${dep}\","
            done <<< "${{ env.luarocks_dependencies }}"
          )"
          # reformat the list
          dependencies="$(
            sort -u <<< "${dependencies}" | 
            sed '$ s/,\s*$//'
          )"

          config="dependencies = {
          ${dependencies}
          }"

          # matches multiline dependencies config
          regex='s/\n*dependencies\s*=\s*[^\\{}]*(?:\\.[\\{}]*)*(?<!\\)(\{(?>\\.|[^{}]|(?1))*})\n*/\n/g'
          
          perl -0777pe ${regex} ${rockspec} \
            > ${rockspec}.tmp && mv ${rockspec}.tmp ${rockspec}
          printf '\n%s\n' "${config}" >> ${rockspec}

          echo "::set-output name=file_path::${rockspec}"

      - name: Commit files
        shell: bash
        id: git
        run: |
          [ "${DEBUG_ENABLED}" = 'true' ] && set -x

          changes=$(git ls-files \
            --modified \
            --others \
            --exclude-standard \
            ${{ env.output_dir }} ${{ steps.rockspec-new.outputs.file_path}}
          )
          echo "::debug::${changes}"

          if [ -z "${changes}" ]; then
            echo "::set-output name=clean::true"
          else
            git add -A ${{ env.output_dir }} ${{ steps.rockspec-new.outputs.file_path}}
            git commit -m "This commit will be lost"
            echo "::set-output name=clean::false"
          fi

          echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Get changed files
        id: changed_files_output
        if: steps.git.outputs.clean == 'false'
        uses: tj-actions/changed-files@v35.4.4
        with:
          files: |
            ${{ env.output_dir }}
          sha: ${{ steps.git.outputs.sha }}

      - name: Get changed files
        id: changed_files_rockspec
        if: steps.git.outputs.clean == 'false'
        uses: tj-actions/changed-files@v35.4.4
        with:
          files: |
            ${{ steps.rockspec-new.outputs.file_path }}
          sha: ${{ steps.git.outputs.sha }}

      - if: github.event_name == 'pull_request' && steps.changed_files_output.outputs.any_modified == 'true'
        run: |
          while IFS= read -r file; do
            echo "::error file=${file}::Output mismatch"
          done <<< "${{ steps.changed_files_output.outputs.all_modified_files }}"
          exit 1

      - name: Upload output
        if: steps.changed_files_output.outputs.any_modified == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: ${{ env.output_dir }}

      - name: Upload rockspec
        if: steps.changed_files_rockspec.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rockspec
          path: ${{ steps.rockspec-new.outputs.file_path }}

  create-pr:
    runs-on: ubuntu-latest
    needs: build
    if: >
      github.event_name != 'pull_request' && needs.build.outputs.output_any_modified == 'true'
      || github.event_name != 'pull_request' && needs.build.outputs.rockspec_is_changed == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - if: needs.build.outputs.output_any_modified == 'true'
        run: rm -rf ${{ env.output_dir }}
      - if: needs.build.outputs.rockspec_is_changed == 'true'
        run: rm -rf *.rockspec
      - name: Download updated rockspec file
        if: needs.build.outputs.rockspec_is_changed == 'true'
        uses: actions/download-artifact@v3
        with:
          name: rockspec
      - name: Download updated output files
        if: needs.build.outputs.output_any_modified == 'true'
        uses: actions/download-artifact@v3
        with:
          name: output
          path: ${{ env.output_dir }}
      - name: Commit ${{ env.output_dir }}
        if: needs.build.outputs.output_any_modified == 'true'
        shell: bash
        run: |
          git add -A ${{ env.output_dir }}
          git commit -m "[tw_autogen] Update EmmyLua definitions"
      - name: Create a PR (${{ env.output_dir }})
        if: needs.build.outputs.output_any_modified == 'true'
        id: pr-output
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          committer: "${{ format(
            '{0} <{1}>',
            env.GIT_COMMITTER_NAME,
            env.GIT_COMMITTER_EMAIL ) }}"
          author: "${{ format(
            '{0} <{1}>',
            env.GIT_AUTHOR_NAME,
            env.GIT_AUTHOR_EMAIL ) }}"
          branch: bot/tw_autogen
          delete-branch: true
          signoff: false
          title: "[tw_autogen] Update EmmyLua definitions"
          body: |
            # tw_autogen

            Update EmmyLua definitions.
          labels: |
            automation
            lua
      - name: Commit rockspec file
        if: needs.build.outputs.rockspec_is_changed == 'true'
        shell: bash
        run: |
          git add -A *.rockspec
          git commit -m "[luarocks] Update rockspec file"
      - name: Create a PR (rockspec)
        if: needs.build.outputs.rockspec_is_changed == 'true'
        id: pr-rockspec
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          committer: "${{ format(
            '{0} <{1}>',
            env.GIT_COMMITTER_NAME,
            env.GIT_COMMITTER_EMAIL ) }}"
          author: "${{ format(
            '{0} <{1}>',
            env.GIT_AUTHOR_NAME,
            env.GIT_AUTHOR_EMAIL ) }}"
          branch: bot/rockspec
          delete-branch: true
          signoff: false
          title: "[luarocks] Update rockspec"
          body: |
            # Luarocks

            Update rockspec file.
          labels: |
            automation
            lua
            luarocks
      - name: Enable Pull Request Automerge (${{ env.output_dir }})
        if: steps.pr-output.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.pr-output.outputs.pull-request-number }}
          merge-method: squash
      - name: Auto approve (${{ env.output_dir }})
        if: steps.pr-output.outputs.pull-request-operation == 'created'
        uses: juliangruber/approve-pull-request-action@v2.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr-output.outputs.pull-request-number }}
      - name: Enable Pull Request Automerge (rockspec)
        if: steps.pr-rockspec.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.pr-rockspec.outputs.pull-request-number }}
          merge-method: squash
      - name: Auto approve (rockspec)
        if: steps.pr-rockspec.outputs.pull-request-operation == 'created'
        uses: juliangruber/approve-pull-request-action@v2.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr-rockspec.outputs.pull-request-number }}
