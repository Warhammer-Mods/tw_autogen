name: Build Lua definitions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  lua_version: 5.1
  luarocks_version: 3.9.1
  vendor_path: .luarocks
  output_dir: output
  GIT_AUTHOR_NAME: github-actions[bot]
  GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_COMMITTER_NAME: github-actions[bot]
  GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      any_modified: ${{ steps.changed-files.outputs.any_modified }}
    steps:
      - uses: actions/checkout@v3
      - uses: leafo/gh-actions-lua@v9.1.0
        with:
          luaVersion: ${{ env.lua_version }}
      - uses: leafo/gh-actions-luarocks@v4.3.0
        with:
          luarocksVersion: ${{ env.luarocks_version }}

      - name: Check if a rockspec file is present
        id: rockspec
        run: |
          if [ -s "$(echo *.rockspec)" ]; then
            echo "::set-output name=file_path::$(echo *.rockspec)"
            echo "::set-output name=is_present::true"
          else
            echo "::set-output name=is_present::false"
          fi

      - uses: actions/cache@v3
        id: cache
        if: steps.rockspec.outputs.is_present == 'true'
        with:
          path: |
            .luarocks
            lua_modules
          key: "${{ runner.os }}-luarocks_vendor_${{ hashFiles('**/*.rockspec') }}"

      - name: Install
        run: |
          if [ "${{ steps.rockspec.outputs.is_present }}" == "true" ]; then
            luarocks install --tree ${{ env.vendor_path }} --only-deps ${{ steps.rockspec.outputs.file_path }}
          fi

          lr_path=$(luarocks path --tree ${{ env.vendor_path }} --lr-path )
          echo "LUA_PATH=${lr_path};${LUA_PATH}" >> $GITHUB_ENV

          lr_cpath=$(luarocks path --tree ${{ env.vendor_path }} --lr-cpath)
          echo "LUA_CPATH=${lr_cpath};${LUA_CPATH}" >> $GITHUB_ENV

          lr_bin=$(luarocks path --tree ${{ env.vendor_path }} --lr-bin)
          echo "${lr_bin/;/:}" >> $GITHUB_PATH

      - name: Generate Lua definitions
        shell: bash
        run: |
          rm -rf ${{ env.output_dir }}
          ./bin/tw_autogen

      - name: Commit files
        shell: bash
        id: git
        run: |
          changes=$(git ls-files \
            --modified \
            --others \
            --exclude-standard \
            ${{ env.output_dir }}
          )
          echo "::debug::${changes}"

          if [ -z "${changes}" ]; then
            echo "::set-output name=clean::true"
          else
            git add -A ${{ env.output_dir }}
            git commit -m "tw_autogen: Update Lua definitions"
            echo "::set-output name=clean::false"
          fi

          echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Get changed files
        id: changed-files
        if: steps.git.outputs.clean == 'false'
        uses: tj-actions/changed-files@v29.0.1
        with:
          files: |
            ${{ env.output_dir }}
          sha: ${{ steps.git.outputs.sha }}

      - name: Upload output
        if: steps.changed-files.outputs.any_modified == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: ${{ env.output_dir }}

  create-pr:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.any_modified == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - run: rm -rf ${{ env.output_dir }}
      - name: Download updated files
        uses: actions/download-artifact@v3
        with:
          name: output
          path: ${{ env.output_dir }}
      - name: Commit files
        id: commit
        run: |
          git add -A ${{ env.output_dir }}
          git commit -m "tw_autogen: Update Lua definitions"
      - name: Create a PR
        id: pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          committer: "${{ format(
            '{0} <{1}>',
            env.GIT_COMMITTER_NAME,
            env.GIT_COMMITTER_EMAIL ) }}"
          author: "${{ format(
            '{0} <{1}>',
            env.GIT_AUTHOR_NAME,
            env.GIT_AUTHOR_EMAIL ) }}"
          branch: bot/tw_autogen
          delete-branch: true
          signoff: false
          title: "[tw_autogen] Update Lua definitions"
          body: |
            # tw_autogen

            Update Lua definitions.
          labels: |
            automation
            lua
