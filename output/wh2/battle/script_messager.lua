--- THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT MANUALLY.

---@class script_messager
local script_messager = {}

--- Gets or creates a script_messager object.
---@return script_messager
function script_messager:new() end

--- Outputs the script_messager internal data for debug purposes.
function script_messager:output() end

--- Sets the script_messager into debug mode for added output.
function script_messager:set_debug() end

--- Adds a listener for a message. If the specified message is received, the specified callback is called. If the third parameter is set to true then the listener will continue after it calls the callback and will listen indefinitely.
---@param message_name string #message name
---@param callback_to_call function #callback to call
---@param persistent boolean? #optional, default value=false persistent
function script_messager:add_listener(message_name, callback_to_call, persistent) end

--- Triggers a string message. Prompts the messager system to notify any listeners for the subject message and call the callback they registered.
---@param message_name string #message name
function script_messager:trigger_message(message_name) end

--- Removes any listener listening for a particular message.
---@param message_name string #message name
function script_messager:remove_listener(message_name) end

--- Blocks or unblocks a message from being transmitted in the future. If a message is blocked, no listeners will be notified when script_messager:trigger_message is called.
---@param message_name string #message name
---@param should_block boolean? #optional, default value=true should block
function script_messager:block_message(message_name, should_block) end
